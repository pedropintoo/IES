services:
  
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # kafka:9092 is inter-container communication / localhost:29092 is external communication
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 10000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
  
  postgres:
    image: postgres:12
    container_name: postgres
    env_file: ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}"
    restart: always

  quotes:
    depends_on: 
      - postgres
      - kafka
    build: 
      context: ./quotes
    env_file: ./.env
    ports:
      - "${QUOTES_LOCAL_PORT}:${QUOTES_DOCKER_PORT}"
    environment:
      SPRING_APPLICATION_JSON: >-
        {
          "spring.datasource.url"  : "jdbc:postgresql://postgres:${POSTGRES_DOCKER_PORT}/${POSTGRES_DB}",
          "spring.datasource.username" : "${POSTGRES_USER}",
          "spring.datasource.password" : "${POSTGRES_PASSWORD}",
          "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
          "spring.jpa.hibernate.ddl-auto" : "update"
        }
      NEW_QUOTES_TOPIC: "${NEW_QUOTES_TOPIC}"
    stdin_open: true
    tty: true

  frontend-quotes:
    depends_on: 
      - quotes
    build: ./frontend-quotes
    ports:
      - "${FRONTEND_LOCAL_PORT}:${FRONTEND_DOCKER_PORT}"
    stdin_open: true
    tty: true
    environment:
      - NODE_ENV=development


  

    



  
